env.projectname = env.JOB_NAME.split('/')[0]
env.formatbranchname = env.BRANCH_NAME.replace('/','SLASH')
env.jenkinsBranchName = env.BRANCH_NAME.replace('/','%2F')


pipeline {
    agent any
    
    triggers {
        gitlab(triggerOnPush: true, branchFilterType: 'All')
        upstream(upstreamProjects: 'smartlearning-web', threshold: hudson.model.Result.SUCCESS)
    }

    options { 
        disableConcurrentBuilds()
        buildDiscarder(logRotator(numToKeepStr: '5'))
        gitLabConnection('gitlab-ci')
    }
    
    stages {
        stage('clean') {
            steps {
                sh 'echo $JAVA_HOME'
                sh '/opt/apache-maven-3.6.0/bin/mvn clean'
            }
        }

        stage('package') {
            steps {
                sh 'echo $JAVA_HOME'
                sh 'echo `pwd`'
                sh '/opt/apache-maven-3.6.0/bin/mvn clean package'
            }
        }
    }

    post {

        success {

            mail bcc: '',
                body: """
                Jenkins Details: ${env.JENKINS_URL}blue/organizations/jenkins/${env.projectname}/detail/${env.jenkinsBranchName}/${env.BUILD_NUMBER}/pipeline
                """,
                from: 'mljenkins@bsfit.com.cn',
                replyTo: '',
                subject: "[打包成功] sl-sqldoc ",
                to: 'tdj@bsfit.com.cn'
        }

        failure {

            mail bcc: '',
                body: """
                Jenkins Details: ${env.JENKINS_URL}blue/organizations/jenkins/${env.projectname}/detail/${env.jenkinsBranchName}/${env.BUILD_NUMBER}/pipeline
                """,
                from: 'mljenkins@bsfit.com.cn',
                replyTo: '',
                subject: "[打包失败] sl-sqldoc",
                to: 'tdj@bsfit.com.cn'
        }

        always {
            sh 'echo good job'
            archive 'target/*.zip'
        }
        
    }

}
