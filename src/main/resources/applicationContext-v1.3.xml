<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd"
	default-autowire="byType"
	>
	<!--default-autowire="default" 将不起任何作用-->
	<!--
		对象的注入简化  
		 autowire="byName"
		 	1.找到当前对象的全部set方法~~~setDog(),
		 	2.将方法进行变形   将set去掉 并且首字母小写   dog 名称
		 	3.根据dog查找所有的bean中的Id，如果id一致则能实现正常注入。
		 	4.如果根据Id匹配，没有匹配成功，则不能入住，为null,这样的写法是有风险的。
		 	 
		 autowire="byType"
		 	1.找到当前对象的全部set方法~~~setDog(),
		 	2.找到参数的类型 Dog.class
		 	3.根据calss类型匹配bean标签中的class，如果class一致则匹配成功，如果class类型不一致，
		 	   则注入失败。 结果为null;
		 	
		 自动装配：如果新建的对象中需要注入引用类型，则可以使用autowire实现自动的装配，能够为引用类型自动的赋值。
		 无需再写property
		需要依赖set方法
		重要性：只有了解了装配过程，才能真正了解注解的注入原理
	  -->
	<bean id="user" class="pojo.User"  autowire="default"/>
	
	<bean id="dog" class="pojo.Dog"></bean>
	<!-- 	<bean id="dog" class="pojo.Dog"></bean> -->
	
	<bean id="cat" class="pojo.Cat"></bean>
	
	
</beans>